//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: OpenChestEvent.proto
// Note: requires additional types generated from: FullUserProto.proto
namespace proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"OpenChestRequestProto")]
  public partial class OpenChestRequestProto : global::ProtoBuf.IExtensible
  {
    public OpenChestRequestProto() {}
    

    private proto.MinimumUserProto _mup = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"mup", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public proto.MinimumUserProto mup
    {
      get { return _mup; }
      set { _mup = value; }
    }

    private string _chestId = "";
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"chestId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string chestId
    {
      get { return _chestId; }
      set { _chestId = value; }
    }

    private bool _usedKey = default(bool);
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"usedKey", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool usedKey
    {
      get { return _usedKey; }
      set { _usedKey = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"OpenChestResponseProto")]
  public partial class OpenChestResponseProto : global::ProtoBuf.IExtensible
  {
    public OpenChestResponseProto() {}
    

    private proto.MinimumUserProto _mup = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"mup", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public proto.MinimumUserProto mup
    {
      get { return _mup; }
      set { _mup = value; }
    }

    private string _equipId = "";
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"equipId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string equipId
    {
      get { return _equipId; }
      set { _equipId = value; }
    }

    private proto.OpenChestResponseProto.OpenChestStatus _status = proto.OpenChestResponseProto.OpenChestStatus.SUCCESS;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"status", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(proto.OpenChestResponseProto.OpenChestStatus.SUCCESS)]
    public proto.OpenChestResponseProto.OpenChestStatus status
    {
      get { return _status; }
      set { _status = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"OpenChestStatus")]
    public enum OpenChestStatus
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"SUCCESS", Value=0)]
      SUCCESS = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"FAIL_NOT_ENOUGH_GEMS", Value=1)]
      FAIL_NOT_ENOUGH_GEMS = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"FAIL_NOT_ENOUGH_KEYS", Value=2)]
      FAIL_NOT_ENOUGH_KEYS = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"FAIL_OTHER", Value=3)]
      FAIL_OTHER = 3
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}